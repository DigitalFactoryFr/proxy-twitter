require('dotenv').config();
const { Sequelize, DataTypes } = require('sequelize'); // üî• Ajout de DataTypes

console.log("üîç Chargement des variables d'environnement :");
console.log(process.env);

console.log("üîç V√©rification des variables pour Sequelize :", {
  database: process.env.DB_NAME,
  user: process.env.DB_USER,
  password: process.env.DB_PASS,
  host: process.env.DB_HOST,
  port: process.env.DB_PORT,
  dialect: process.env.DB_DIALECT
});

// Cr√©ation de la connexion √† PostgreSQL
const sequelize = new Sequelize(
  process.env.DB_NAME,   // Base de donn√©es
  process.env.DB_USER,   // Utilisateur
  process.env.DB_PASS,   // Mot de passe
  {
    host: process.env.DB_HOST,
    port: process.env.DB_PORT,
    dialect: 'postgres',
    logging: console.log // üî• Voir toutes les requ√™tes SQL ex√©cut√©es
  }
);

// üî• D√©finition du mod√®le Article
const Article = sequelize.define("Article", {
  title: {
    type: DataTypes.STRING,
    allowNull: false
  },
  description: {
    type: DataTypes.TEXT,
    allowNull: false
  },
  image: {
    type: DataTypes.STRING
  },
  tags: {
    type: DataTypes.ARRAY(DataTypes.STRING),
    allowNull: false
  },
  date: {
    type: DataTypes.DATE,
    allowNull: false
  },
  source: {
    type: DataTypes.STRING,
    allowNull: false
  },
  url: {
    type: DataTypes.STRING,
    allowNull: false
  },
  language: {
    type: DataTypes.STRING,
    allowNull: false
  },
  // üÜï Ajout du champ "companies" (tableau de strings, avec valeur par d√©faut)
  companies: {
    type: DataTypes.ARRAY(DataTypes.STRING),
    allowNull: false,
    defaultValue: []
  }
});


// üìå Synchronisation de la base de donn√©es
sequelize.sync();

module.exports = { sequelize, Article };
